{"version":3,"file":"static/js/309.73bbcfa6.chunk.js","mappings":"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","sources":["components/login/login.js","pages/loginPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser, registerUser } from \"../../actions\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./style.css\";\r\nconst Login = () => {\r\n  const [loggedIn, setLoggedIn] = useState(true);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [contactNumber, setContactNumber] = useState(\"\");\r\n  const [userType, setUserType] = useState(\"\");\r\n  const [emailLogin, setEmailLogin] = useState(\"\");\r\n  const [passwordLogin, setPasswordLogin] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [loginErrors, setLoginErrors] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const clientError = user?.error;\r\n  useEffect(() => {\r\n    toast.error(clientError);\r\n  }, [clientError]);\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const errors = {};\r\n    console.log(\"Hello\");\r\n\r\n    try {\r\n      const formContactNumber = `+91${contactNumber}`;\r\n      const formData = {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password,\r\n        confirmPassword: confirmPassword,\r\n        userType: userType,\r\n        contactNumber: formContactNumber,\r\n      };\r\n      if (!formData.firstName) {\r\n        errors.firstName = \"First name is required.\";\r\n        console.log(errors);\r\n      }\r\n      if (!formData.lastName) {\r\n        errors.lastName = \"Last name is required.\";\r\n      }\r\n      if (!formData.email) {\r\n        errors.email = \"Email address is required.\";\r\n      } else if (!/^([\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/.test(formData.email)) {\r\n        errors.email = \"Invalid email address.\";\r\n      }\r\n\r\n      if (!formData.password) {\r\n        errors.password = \"Password is required.\";\r\n      } else if (formData.password.length < 6) {\r\n        errors.password = \"Password must be at least 6 characters long.\";\r\n      }\r\n\r\n      if (!formData.confirmPassword) {\r\n        errors.confirmPassword = \"Confirm password is required.\";\r\n      } else if (formData.password !== formData.confirmPassword) {\r\n        errors.confirmPassword = \"Passwords do not match.\";\r\n      }\r\n\r\n      if (!formData.contactNumber) {\r\n        errors.contactNumber = \"Contact number is required.\";\r\n      } else if (!/^\\+91\\d{10}$/.test(formData.contactNumber)) {\r\n        errors.contactNumber = \"Invalid contact number.\";\r\n      }\r\n      if (!formData.userType) {\r\n        errors.userType = \"User type is required.\";\r\n      } else if (\r\n        ![\"student\", \"professional\", \"other\"].includes(formData.userType)\r\n      ) {\r\n        errors.userType = \"Invalid user type.\";\r\n      }\r\n\r\n      setErrors(errors);\r\n\r\n      //* If there are any errors, return early and do not dispatch the action\r\n      if (Object.keys(errors).length > 0) {\r\n        return;\r\n      }\r\n\r\n      dispatch(registerUser(formData, navigate));\r\n    } catch (err) {\r\n      console.log(err.errors);\r\n    }\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      emailLogin,\r\n      passwordLogin,\r\n    };\r\n    const loginerrors = {};\r\n    if (!formData.emailLogin) {\r\n      loginerrors.email = \"Email address is required.\";\r\n    } else if (\r\n      !/^([\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/.test(formData.emailLogin)\r\n    ) {\r\n      loginerrors.email = \"Invalid email address.\";\r\n    }\r\n    if (!formData.passwordLogin) {\r\n      loginerrors.password = \"Password is required.\";\r\n    } else if (formData.passwordLogin.length < 6) {\r\n      loginerrors.password = \"Password must be at least 6 characters long.\";\r\n    }\r\n\r\n    setLoginErrors(loginerrors);\r\n    //todo: If there are any errors, return early and do not dispatch the action\r\n    if (Object.keys(loginerrors).length > 0) {\r\n      return;\r\n    }\r\n\r\n    dispatch(loginUser(formData, navigate));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"bottom-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        theme=\"light\"\r\n      />\r\n      <div className=\"container my-5 form-container\">\r\n        <div className=\"row justify-content-center\" style={{ gap: 100 }}>\r\n          {loggedIn ? (\r\n            <div className=\"col-md-4 form-col\">\r\n              <h4 className=\"fw-bold form-head\">Login</h4>\r\n              <p className=\"global-text\" style={{ fontSize: 15 }}>\r\n                If you have an account with us, please login\r\n              </p>\r\n              <form action=\"\" onSubmit={handleLogin}>\r\n                <label htmlFor=\"\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={emailLogin}\r\n                  className=\"input\"\r\n                  onChange={(e) => setEmailLogin(e.target.value)}\r\n                />\r\n                {loginErrors.email ? (\r\n                  <div className=\"error-message\">{loginErrors.email}</div>\r\n                ) : null}\r\n                <label htmlFor=\"\" className=\"mt-3\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={passwordLogin}\r\n                  className=\"input\"\r\n                  onChange={(e) => setPasswordLogin(e.target.value)}\r\n                />\r\n                {loginErrors.password && (\r\n                  <div className=\"error-message\">{loginErrors.password}</div>\r\n                )}\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <button className=\"form-btn\">Login</button>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <a href=\".\" className=\"forgot-password\">\r\n                      Forgot Password?\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              <button\r\n                className=\"btn register mt-3\"\r\n                onClick={() => setLoggedIn(false)}\r\n              >\r\n                Register New Account\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"col-md-5 register-form\">\r\n              <h4 className=\"fw-bold form-head\">Register</h4>\r\n              <p className=\"global-text\" style={{ fontSize: 15 }}>\r\n                If you don't have an account, please register\r\n              </p>\r\n              <form action=\"\" onSubmit={(e) => handleRegister(e)}>\r\n                <div className=\"d-flex gap-5 form-div\">\r\n                  <div>\r\n                    <label htmlFor=\"\">First Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={firstName}\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                      className=\"input\"\r\n                    />\r\n                    {errors.firstName ? (\r\n                      <div className=\"error-message\">{errors.firstName}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"\" className=\"\">\r\n                      Last Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={lastName}\r\n                      onChange={(e) => setLastName(e.target.value)}\r\n                      className=\"input\"\r\n                    />\r\n                    {errors.lastName && (\r\n                      <div className=\"error-message\">{errors.lastName}</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-flex gap-5 form-div\">\r\n                  <div>\r\n                    <label htmlFor=\"\">Email</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      className=\"input\"\r\n                    />\r\n                    {errors.email && (\r\n                      <div className=\"error-message\">{errors.email}</div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"\">Contact Number</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={contactNumber}\r\n                      onChange={(e) => setContactNumber(e.target.value)}\r\n                      className=\"input\"\r\n                    />\r\n                    {errors.contactNumber && (\r\n                      <div className=\"error-message\">\r\n                        {errors.contactNumber}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-flex gap-5 form-div\">\r\n                  <div>\r\n                    <label htmlFor=\"\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      className=\"input\"\r\n                    />\r\n                    {errors.password && (\r\n                      <div className=\"error-message\">{errors.password}</div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"\">Confirm-Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n                      className=\"input\"\r\n                    />\r\n                    {errors.confirmPassword && (\r\n                      <div className=\"error-message\">\r\n                        {errors.confirmPassword}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <label className=\"mt-3\">I am a?</label>\r\n                <select\r\n                  value={userType}\r\n                  onChange={(e) => setUserType(e.target.value)}\r\n                  className=\"input\"\r\n                >\r\n                  <option value=\"\">select</option>\r\n                  <option value=\"student\">Student</option>\r\n                  <option value=\"professional\">Professional</option>\r\n                  <option value=\"other\">Other</option>\r\n                </select>\r\n                {errors.userType && (\r\n                  <div className=\"error-message\">{errors.userType}</div>\r\n                )}\r\n                <div className=\"d-flex justify-content-between \">\r\n                  <div>\r\n                    <button type=\"submit\" className=\"form-btn\">\r\n                      Sign up\r\n                    </button>\r\n                  </div>\r\n                  {/* <div className=\"mt-4\">\r\n                    <a href=\".\" className=\"forgot-password\">\r\n                      Forgot Password?\r\n                    </a>\r\n                  </div> */}\r\n                </div>\r\n              </form>\r\n              <button\r\n                className=\"register btn mt-3\"\r\n                onClick={() => setLoggedIn(true)}\r\n              >\r\n                Login with an existing account\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport Login from \"../components/login/login\";\r\nimport Loader from \"../components/login/loader\";\r\n\r\nconst LoginPage = () => {\r\n  const isLoading = useSelector((state) => state.user.isLoading);\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader></Loader>\r\n      ) : (\r\n        <>\r\n          <Login></Login>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default LoginPage;\r\n"],"names":["Login","loggedIn","setLoggedIn","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","contactNumber","setContactNumber","userType","setUserType","emailLogin","setEmailLogin","passwordLogin","setPasswordLogin","errors","setErrors","loginErrors","setLoginErrors","dispatch","useDispatch","navigate","useNavigate","user","useSelector","state","clientError","error","useEffect","toast","_jsxs","_Fragment","children","_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","theme","className","style","gap","fontSize","action","onSubmit","e","preventDefault","formData","loginerrors","test","length","Object","keys","loginUser","htmlFor","type","value","onChange","target","href","onClick","async","console","log","includes","registerUser","err","handleRegister","LoginPage","isLoading","Loader"],"sourceRoot":""}