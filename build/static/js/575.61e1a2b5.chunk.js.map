{"version":3,"file":"static/js/575.61e1a2b5.chunk.js","mappings":"iNAgHA,EA3GY,WACV,IAAAA,GAAsBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GACZI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,KAAKA,IAAI,IAC7CG,EAAQH,EAAOA,EAAKG,MAAQ,KAC5BC,GAAYC,EAAAA,EAAAA,QAAO,KAEzBC,EAAAA,EAAAA,YAAU,WACJF,EAAUG,QAAQ,IACpBH,EAAUG,QAAQ,GAAGC,OAEzB,GAAG,IAsBH,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAClBE,EAAAA,EAAAA,MAAA,QAAMD,UAAU,WAAUD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaD,SAAC,eAC9BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gBAAeD,SAAC,oDAG7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAgBD,SAqC5BG,MAAMC,KAAK,CAAEC,OAAQ,IAAK,SAACC,EAAGC,GAAK,OAClCT,EAAAA,EAAAA,KAAA,SAEEU,UAAQ,EACRC,UAAW,EACXC,KAAK,OACLT,UAAU,YACVU,MAAO5B,EAAIwB,GACXK,SAAU,SAACC,GAAC,OAzEA,SAACC,EAAOC,GAChCD,EAAME,iBACN,IAAML,EAAQG,EAAMG,OAAON,MAE3B,GAAI,QAAQO,KAAKP,IAAUA,EAAMN,QAAU,EAAG,CAC5C,IAAMc,EAASpC,EAAIqC,MAAM,IACzBD,EAAOJ,GAAcJ,EACrB3B,EAAOmC,EAAOE,KAAK,KACfN,EAAa,GAAe,KAAVJ,GACpBlB,EAAUG,QAAQmB,EAAa,GAAGlB,OAEtC,CACF,CA6D+ByB,CAAkBT,EAAGN,EAAM,EAC5CgB,IAAK,SAACC,GAAK,OAAM/B,EAAUG,QAAQW,GAASiB,CAAK,GAP5CjB,EAQL,OAGNT,EAAAA,EAAAA,KAAA,UAAQG,UAAU,eAAeS,KAAK,SAASe,QAhElC,SAACZ,GACpBA,EAAEG,iBACF,IAAMU,EAAU,CAAE3C,IAAKA,EAAKS,MAAOA,GACnCP,GAAS0C,EAAAA,EAAAA,IAAUD,EAASvC,GAC9B,EA4D6Ea,SAAC,YAGtEE,EAAAA,EAAAA,MAAA,KAAGD,UAAU,aAAYD,SAAA,CAAC,2BACC,KACzBF,EAAAA,EAAAA,KAAA,UAAQG,UAAU,YAAYS,KAAK,SAAQV,SAAC,yBAQxD,E,UCrGA,EALgB,WACd,IAAM4B,GAAYtC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,KAAKuC,SAAS,IAC7D,OAAO9B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAG4B,GAAY9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,KAAa/B,EAAAA,EAAAA,KAACgC,EAAG,KAChD,C","sources":["components/otp/otp.js","pages/otpPage.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport \"./otp.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { verifyOtp } from \"../../actions\";\r\nimport { useNavigate } from \"react-router\";\r\nconst Otp = () => {\r\n  const [otp, setOtp] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user.user);\r\n  const email = user ? user.email : null;\r\n  const inputRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (inputRefs.current[0]) {\r\n      inputRefs.current[0].focus();\r\n    }\r\n  }, []);\r\n\r\n  const handleInputChange = (event, inputIndex) => {\r\n    event.preventDefault();\r\n    const value = event.target.value;\r\n\r\n    if (/^\\d*$/.test(value) && value.length <= 1) {\r\n      const newOtp = otp.split(\"\");\r\n      newOtp[inputIndex] = value;\r\n      setOtp(newOtp.join(\"\"));\r\n      if (inputIndex < 3 && value !== \"\") {\r\n        inputRefs.current[inputIndex + 1].focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const otpData = { otp: otp, email: email };\r\n    dispatch(verifyOtp(otpData, navigate));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"otp\">\r\n        <form className=\"otp-Form\">\r\n          <span className=\"mainHeading\">Enter OTP</span>\r\n          <p className=\"otpSubheading\">\r\n            We have sent a verification code to your email\r\n          </p>\r\n          <div className=\"inputContainer\">\r\n            {/* <input\r\n              required=\"required\"\r\n              maxLength={1}\r\n              type=\"text\"\r\n              className=\"otp-input\"\r\n              value={otp[0] || \"\"}\r\n              onChange={(e) => handleInputChange(e, 0)}\r\n              id=\"otp-input1\"\r\n            />\r\n            <input\r\n              required=\"required\"\r\n              maxLength={1}\r\n              type=\"text\"\r\n              className=\"otp-input\"\r\n              value={otp[1] || \"\"}\r\n              onChange={(e) => handleInputChange(e, 1)}\r\n              id=\"otp-input2\"\r\n            />\r\n            <input\r\n              required=\"required\"\r\n              maxLength={1}\r\n              type=\"text\"\r\n              className=\"otp-input\"\r\n              value={otp[2] || \"\"}\r\n              onChange={(e) => handleInputChange(e, 2)}\r\n              id=\"otp-input3\"\r\n            />\r\n            <input\r\n              required=\"required\"\r\n              maxLength={1}\r\n              type=\"text\"\r\n              className=\"otp-input\"\r\n              value={otp[3] || \"\"}\r\n              onChange={(e) => handleInputChange(e, 3)}\r\n              id=\"otp-input4\"\r\n            /> */}\r\n            {Array.from({ length: 4 }, (_, index) => (\r\n              <input\r\n                key={index}\r\n                required\r\n                maxLength={1}\r\n                type=\"text\"\r\n                className=\"otp-input\"\r\n                value={otp[index]}\r\n                onChange={(e) => handleInputChange(e, index)}\r\n                ref={(input) => (inputRefs.current[index] = input)}\r\n              />\r\n            ))}\r\n          </div>\r\n          <button className=\"verifyButton\" type=\"submit\" onClick={handleSubmit}>\r\n            Verify\r\n          </button>\r\n          <p className=\"resendNote\">\r\n            Didn't receive the code?{\" \"}\r\n            <button className=\"resendBtn\" type=\"button\">\r\n              Resend Code\r\n            </button>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Otp;\r\n","import { useSelector } from \"react-redux\";\r\nimport Otp from \"../components/otp/otp\";\r\nimport Loader from \"../components/login/loader\";\r\n\r\nconst OtpPage = () => {\r\n  const isLoading = useSelector((state) => state.user.isLoading);\r\n  return <>{isLoading ? <Loader></Loader> : <Otp></Otp>}</>;\r\n};\r\n\r\nexport default OtpPage;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","otp","setOtp","dispatch","useDispatch","navigate","useNavigate","user","useSelector","state","email","inputRefs","useRef","useEffect","current","focus","_jsx","_Fragment","children","className","_jsxs","Array","from","length","_","index","required","maxLength","type","value","onChange","e","event","inputIndex","preventDefault","target","test","newOtp","split","join","handleInputChange","ref","input","onClick","otpData","verifyOtp","isLoading","Loader","Otp"],"sourceRoot":""}